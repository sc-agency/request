generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  role      Role      @default(CLIENT)
  active    Boolean   @default(true)
  clientId  String?
  client    Client?   @relation(fields: [clientId], references: [id])
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([clientId])
}

model Client {
  id          String    @id @default(uuid())
  companyName String
  contactName String
  email       String
  phone       String?
  address     String?
  siret       String?   @unique
  iban        String?
  bic         String?
  active      Boolean   @default(true)
  users       User[]
  tickets     Ticket[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Ticket {
  id          String       @id @default(uuid())
  reference   String       @unique
  title       String
  description String       @db.Text
  status      TicketStatus @default(PENDING)
  priority    Priority     @default(NORMAL)
  clientId    String
  client      Client       @relation(fields: [clientId], references: [id])
  comments    Comment[]
  attachments Attachment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([clientId])
}

model Comment {
  id         String   @id @default(uuid())
  content    String   @db.Text
  isInternal Boolean  @default(false)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  ticketId   String
  ticket     Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
  @@index([ticketId])
}

model Attachment {
  id        String   @id @default(uuid())
  name      String
  size      Int
  type      String
  url       String
  ticketId  String
  ticket    Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([ticketId])
}

enum Role {
  ADMIN
  CLIENT
}

enum TicketStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum Priority {
  LOW
  NORMAL
  HIGH
  URGENT
}